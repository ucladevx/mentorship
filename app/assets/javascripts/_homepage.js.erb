//called in onReady located in handlers.js

function homepage(){
	// var active;
	// $('ui.sidebar').sidebar('setting', 'transition','overlay');
	// $('.right.menu.open').unbind().click(function(e){


	// 	console.log('clicked')
 //        e.preventDefault();

	// 	var menu = document.getElementById('mobile-menu');
	//     if (menu.style.display == 'block') {
	//         menu.style.display = 'none';
	//     } else {
	//         menu.style.display = 'block';
	//     }

	// 	// Check to see the orientation of the chevron
	// 	// and alternate
	// 	var icon = document.getElementById("chevron");
	// 	var iconClass = icon.className;

	// 	if (iconClass == "chevron down icon") {
	// 		document.getElementById("chevron").classList= "chevron up icon";
	// 	}

	// 	else {
	// 		document.getElementById("chevron").classList= "chevron down icon";
	// 	}
	// });
	// $('.ui.dropdown').dropdown();

	// initCarousel('.note-cards', {
	// 	prevArrow: '.prev-notes',
	// 	nextArrow: '.next-notes'
	// });

	$('.ui.rating').rating();
	// $('#link').click(function(){
	//     $("html, body").animate({ scrollTop: 0 }, 400);
	//     return false;
 // 	});


 // 	$(document).scroll(function() {
	//   var y = $(this).scrollTop();
	//   if (y > 50) {
	//   	$('#grid-float').removeClass('hide');
	//   }
	//   else{
	//   	$('#grid-float').addClass('hide');
	//   }

	// });
}


/*basically instead of dynamically updating the webpage using info from the database
I'm posting to the database and then seperately having javascript logic change it
*/
var currentVoteStates = new Object(); //unintialized 0, 1 upvoted, -1 novote
function changeRep(initalState, noteID) {
	if (!currentVoteStates.hasOwnProperty(noteID)) //only care about initialState when unintialized
		currentVoteStates[noteID] = initalState;

	RepID = "Rep"+String(noteID);
	if (currentVoteStates[noteID] === 1) { //if upvoted, then unupvote
		document.getElementById(RepID).innerHTML = String(Number(document.getElementById(RepID).innerHTML)-1);
		currentVoteStates[noteID] = -1;
	}
	else { //upvote
		document.getElementById(RepID).innerHTML = String(Number(document.getElementById(RepID).innerHTML)+1);
		currentVoteStates[noteID] = 1;
	}
}
/*
$(document).ready(function(){
	var main_home = $('#main');
	var main_content = $('#content');
	var sidebarBtn = $('#open_nav');
	// show sidebar
	function showSidebar(){
		main_home.addClass('use-sidebar');
		sidebarBtn.addClass('remove-button');
	}

	// hide sidebar
	function hideSidebar(){
		main_home.removeClass('use-sidebar');
		sidebarBtn.removeClass('remove-button');
	}
	main_content.unbind("click").click(function(){
		hideSidebar();
	});
	sidebarBtn.unbind("click").click(function(e){
		e.preventDefault();
		if ( main_home.hasClass('use-sidebar') ){
			hideSidebar();
		}
		else{
			showSidebar();
		}
	})
});
*/
